<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zw.jk.dao.ExportDao">

    <!-- 查询某个合同下的货物信息 -->

    <select id="find" parameterType="map" resultType="Export">
        select
        EXPORT_ID,
        INPUT_DATE,
        CONTRACT_IDS,
        CUSTOMER_CONTRACT,
        LCNO,
        CONSIGNEE,
        MARKS,
        REMARK,
        SHIPMENT_PORT,
        DESTINATION_PORT,
        TRANSPORT_MODE,
        PRICE_CONDITION,
        STATE,
        GROSS_WEIGHT,
        NET_WEIGHT,
        MEASUREMENT,
        CREATE_BY,
        CREATE_DEPT,
        CREATE_TIME
        from export_c
        where 1=1
        <if test="exportId != null"> and EXPORT_ID=#{exportId}</if>
    </select>

    <select id="get" parameterType="string" resultType="Export">
        select
            EXPORT_ID,
            INPUT_DATE,
            CONTRACT_IDS,
            CUSTOMER_CONTRACT,
            LCNO,
            CONSIGNEE,
            MARKS,
            REMARK,
            SHIPMENT_PORT,
            DESTINATION_PORT,
            TRANSPORT_MODE,
            PRICE_CONDITION,
            STATE,
            GROSS_WEIGHT,
            NET_WEIGHT,
            MEASUREMENT,
            CREATE_BY,
            CREATE_DEPT,
            CREATE_TIME
        from export_c
        where EXPORT_ID=#{id}
    </select>

    <insert id="insert" parameterType="Export">
        insert into export_c
        (
            EXPORT_ID,
            INPUT_DATE,
            CONTRACT_IDS,
            CUSTOMER_CONTRACT,
            LCNO,
            CONSIGNEE,
            MARKS,
            REMARK,
            SHIPMENT_PORT,
            DESTINATION_PORT,
            TRANSPORT_MODE,
            PRICE_CONDITION,
            STATE,
            GROSS_WEIGHT,
            NET_WEIGHT,
            MEASUREMENT,
            CREATE_BY,
            CREATE_DEPT,
            CREATE_TIME
        )
        values(
        #{exportId},
        #{inputDate},
        #{contractIds, jdbcType=VARCHAR},
        #{customerContract, jdbcType=VARCHAR},
        #{lcno, jdbcType=VARCHAR},
        #{consignee, jdbcType=VARCHAR},
        #{marks, jdbcType=VARCHAR},
        #{remark, jdbcType=VARCHAR},
        #{shipmentPort, jdbcType=VARCHAR},
        #{destinationPort, jdbcType=VARCHAR},
        #{transportMode, jdbcType=VARCHAR},
        #{priceCondition, jdbcType=VARCHAR},
        #{state, jdbcType=INTEGER},
        #{grossWeight, jdbcType=FLOAT},
        #{netWeight, jdbcType=FLOAT},
        #{measurement, jdbcType=FLOAT},
        #{createBy, jdbcType=VARCHAR},
        #{createDept, jdbcType=VARCHAR},
        #{createTime, jdbcType=TIMESTAMP}
        )
    </insert>
    <update id="update" parameterType="Export">
        update export_c
        <set>
            <if test="lcno != null">LCNO=#{lcno},</if>
            <if test="consignee != null">CONSIGNEE=#{consignee},</if>
            <if test="marks != null">MARKS=#{marks},</if>
            <if test="remark != null">REMARK=#{remark},</if>
            <if test="shipmentPort != null">SHIPMENT_PORT=#{shipmentPort},</if>
            <if test="destinationPort != null">DESTINATION_PORT=#{destinationPort},</if>
            <if test="transportMode != null">TRANSPORT_MODE=#{transportMode},</if>
            <if test="priceCondition != null">PRICE_CONDITION=#{priceCondition},</if>
            <if test="grossWeight != null">GROSS_WEIGHT=#{grossWeight},</if>
            <if test="netWeight != null">NET_WEIGHT=#{netWeight},</if>
            <if test="measurement != null">MEASUREMENT=#{measurement},</if>
            <if test="createBy != null">CREATE_BY=#{createBy},</if>
            <if test="createDept != null">CREATE_DEPT=#{createDept},</if>
            <if test="createTime != null">CREATE_TIME=#{createTime},</if>
        </set>
        where export_id=#{id}
    </update>

    <!-- 删除一条 -->
    <delete id="deleteById" parameterType="string">
        delete from export_c
        where export_id=#{id}
    </delete>
    <delete id="deleteByContractId" parameterType="string">
        delete from export_c
        where EXPORT_ID IN
        <foreach collection="array" close=")" open="(" separator="," item="id">
            #{id}
        </foreach>
    </delete>
    <!-- 删除多条（一维字符串数组） -->
    <delete id="delete" parameterType="string">
        delete from export_c
        where export_id in
        <foreach collection="array" item="id" open="(" close=")" separator=",">
            #{id}
        </foreach>
    </delete>
    <update id="updateState" parameterType="map">
        UPDATE export_c
        SET STATE = #{state} where EXPORT_ID = #{id}
    </update>
</mapper>